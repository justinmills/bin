#! /bin/bash

set -e

# Script to deal with the current branch you're on having been merged.

BRANCH="$(git branch | grep "^*" | awk '{print $2}')"

# TODO: handle -squash'd branches special by deleting forcibly, the non-squash branch.

echo "Changing to main, pulling latest changes and cleaning up ${BRANCH}"

# Waymark tweak: most of the time I'm doing this for branches against dev/develop, so use those if
# they exist, otherwise fall back to main
BASE_BRANCH=main
if git rev-parse --verify origin/develop >/dev/null 2>&1 ; then
    BASE_BRANCH=develop
elif git rev-parse --verify origin/dev >/dev/null 2>&1 ; then
    BASE_BRANCH=dev
elif git rev-parse --verify origin/master >/dev/null 2>&1 ; then
    # Not all of us got the memo :/
    BASE_BRANCH=master
fi

git checkout "$BASE_BRANCH"
git pull
git branch -D "${BRANCH}"
if [[ "$BRANCH" = *-squash ]] ; then
    echo "Force removing -squash branch source"
    git branch -D "${BRANCH%%-squash}"
fi
